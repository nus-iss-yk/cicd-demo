name: Java CI with Maven

on:
  push:
    branches: ["main", "master"]
  pull_request:
    branches: ["main", "master"]
    types: [opened, synchronize, reopened]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run Test with Maven
        run: mvn -B test

  sonar:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze on SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.organization=nus-iss-yk -Dsonar.projectKey=nus-iss-yk_cicd-demo -Dsonar.host.url=https://sonarcloud.io
  snyk:
      needs: test
      runs-on: ubuntu-latest
  
      steps:
        - uses: actions/checkout@master
  
        - name: Run Snyk to check for vulnerabilities
          uses: snyk/actions/maven@master
          continue-on-error: true # To make sure that SARIF upload gets called
          env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
            SYNK_AUTH_TOKEN: ${{ secrets.SYNK_PAT }} # Use the PAT as an authentication token
          with:
            args: --sarif-file-output=snyk.sarif
  
        - name: Upload result to GitHub Code Scanning
          uses: github/codeql-action/upload-sarif@v3
          with:
            sarif_file: snyk.sarif
